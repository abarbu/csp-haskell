import Test.Tasty
import Test.Tasty.HUnit

import Control.Monad.Amb
import Control.Monad.CSP
import Control.Monad
import Data.List

import System.IO.Unsafe

main = defaultMain tests

tests :: TestTree
tests = testGroup "Tests" [unitTests]

unitTests = testGroup "Unit tests"
  [ testCase "constraint1" $
    oneCSPSolution testC0 @?= 2
  , testCase "constraint2 same type" $
    oneCSPSolution testC1 @?= (5,4)
  , testCase "constraint2 different types" $
    oneCSPSolution testC2 @?= ("2",2)
  , testCase "sudoku1" $
    solveSudoku sudoku1 @?= [[4,8,3,9,2,1,6,5,7],[9,6,7,3,4,5,8,2,1],[2,5,1,8,7,6,4,9,3],[5,4,8,1,3,2,9,7,6],[7,2,9,5,6,4,1,3,8],[1,3,6,7,9,8,2,4,5],[3,7,2,6,8,9,5,1,4],[8,1,4,2,5,3,7,6,9],[6,9,5,4,1,7,3,8,2]]
  , testCase "sudoku3" $
    solveSudoku sudoku3 @?= [[4,6,2,8,3,1,9,5,7],[7,9,5,4,2,6,1,8,3],[3,8,1,7,9,5,4,2,6],[1,7,3,9,8,4,2,6,5],[6,5,9,3,1,2,7,4,8],[2,4,8,5,6,7,3,1,9],[9,2,6,1,7,8,5,3,4],[8,3,4,2,5,9,6,7,1],[5,1,7,6,4,3,8,9,2]]
  , testCase "Euler p96" $
    p96 @?= [(1,[[4,8,3,9,2,1,6,5,7],[9,6,7,3,4,5,8,2,1],[2,5,1,8,7,6,4,9,3],[5,4,8,1,3,2,9,7,6],[7,2,9,5,6,4,1,3,8],[1,3,6,7,9,8,2,4,5],[3,7,2,6,8,9,5,1,4],[8,1,4,2,5,3,7,6,9],[6,9,5,4,1,7,3,8,2]]),(2,[[2,4,5,9,8,1,3,7,6],[1,6,9,2,7,3,5,8,4],[8,3,7,5,6,4,2,1,9],[9,7,6,1,2,5,4,3,8],[5,1,3,4,9,8,6,2,7],[4,8,2,7,3,6,9,5,1],[3,9,1,6,5,7,8,4,2],[7,2,8,3,4,9,1,6,5],[6,5,4,8,1,2,7,9,3]]),(3,[[4,6,2,8,3,1,9,5,7],[7,9,5,4,2,6,1,8,3],[3,8,1,7,9,5,4,2,6],[1,7,3,9,8,4,2,6,5],[6,5,9,3,1,2,7,4,8],[2,4,8,5,6,7,3,1,9],[9,2,6,1,7,8,5,3,4],[8,3,4,2,5,9,6,7,1],[5,1,7,6,4,3,8,9,2]]),(4,[[1,3,7,2,5,6,8,4,9],[9,2,8,3,1,4,5,6,7],[4,6,5,8,9,7,3,1,2],[6,7,3,5,4,2,9,8,1],[8,1,9,6,7,3,2,5,4],[5,4,2,1,8,9,7,3,6],[2,5,6,7,3,1,4,9,8],[3,9,1,4,2,8,6,7,5],[7,8,4,9,6,5,1,2,3]]),(5,[[5,2,3,8,1,6,7,4,9],[7,8,4,5,9,3,1,2,6],[6,9,1,4,7,2,8,3,5],[2,3,9,1,4,5,6,8,7],[4,5,7,2,6,8,9,1,3],[1,6,8,9,3,7,2,5,4],[3,4,2,7,8,9,5,6,1],[9,1,5,6,2,4,3,7,8],[8,7,6,3,5,1,4,9,2]]),(6,[[1,7,6,9,2,3,5,8,4],[5,2,4,8,1,7,6,3,9],[8,9,3,6,5,4,2,7,1],[9,5,7,3,4,8,1,6,2],[6,3,8,1,9,2,4,5,7],[4,1,2,7,6,5,3,9,8],[2,6,5,4,8,9,7,1,3],[7,8,1,2,3,6,9,4,5],[3,4,9,5,7,1,8,2,6]]),(7,[[1,4,3,9,8,6,2,5,7],[6,7,9,4,2,5,3,8,1],[2,8,5,7,3,1,6,9,4],[9,6,2,3,5,4,1,7,8],[3,5,7,6,1,8,9,4,2],[4,1,8,2,7,9,5,6,3],[8,2,1,5,6,7,4,3,9],[7,9,6,1,4,3,8,2,5],[5,3,4,8,9,2,7,1,6]]),(8,[[4,8,7,1,5,6,9,3,2],[3,6,2,4,9,8,7,5,1],[9,1,5,3,7,2,8,6,4],[8,4,6,5,1,9,2,7,3],[5,9,3,7,2,4,1,8,6],[2,7,1,8,6,3,5,4,9],[1,2,4,6,8,5,3,9,7],[7,3,8,9,4,1,6,2,5],[6,5,9,2,3,7,4,1,8]]),(9,[[8,1,4,9,7,6,5,3,2],[6,5,9,1,2,3,4,7,8],[7,3,2,8,5,4,1,6,9],[9,4,8,2,6,5,3,1,7],[2,7,5,3,4,1,8,9,6],[1,6,3,7,9,8,2,4,5],[3,9,1,6,8,2,7,5,4],[5,8,7,4,3,9,6,2,1],[4,2,6,5,1,7,9,8,3]]),(10,[[7,6,1,9,2,8,4,5,3],[9,2,5,7,4,3,1,6,8],[4,3,8,6,1,5,9,2,7],[3,5,7,4,6,1,2,8,9],[8,9,4,3,7,2,6,1,5],[2,1,6,5,8,9,3,7,4],[6,8,9,1,5,4,7,3,2],[1,4,2,8,3,7,5,9,6],[5,7,3,2,9,6,8,4,1]]),(11,[[9,7,6,1,2,5,4,3,8],[1,5,8,4,3,6,9,2,7],[4,2,3,8,7,9,1,5,6],[2,3,4,7,6,1,8,9,5],[8,6,7,9,5,2,3,1,4],[5,1,9,3,8,4,7,6,2],[7,8,2,5,1,3,6,4,9],[3,9,5,6,4,7,2,8,1],[6,4,1,2,9,8,5,7,3]]),(12,[[9,6,2,3,4,1,7,5,8],[1,4,8,9,7,5,6,2,3],[5,7,3,2,6,8,1,4,9],[3,2,1,6,9,4,8,7,5],[4,8,7,5,1,2,9,3,6],[6,9,5,8,3,7,4,1,2],[8,3,4,7,2,6,5,9,1],[2,1,6,4,5,9,3,8,7],[7,5,9,1,8,3,2,6,4]]),(13,[[3,9,7,6,8,1,5,2,4],[6,4,5,2,7,9,8,1,3],[2,1,8,5,3,4,9,7,6],[8,2,3,9,5,6,7,4,1],[1,6,9,7,4,2,3,5,8],[7,5,4,3,1,8,6,9,2],[4,7,2,8,9,3,1,6,5],[5,3,1,4,6,7,2,8,9],[9,8,6,1,2,5,4,3,7]]),(14,[[6,3,9,2,1,8,4,5,7],[4,7,1,5,3,9,2,6,8],[8,2,5,6,7,4,1,3,9],[5,6,4,8,2,3,7,9,1],[7,9,3,4,5,1,8,2,6],[2,1,8,7,9,6,3,4,5],[3,5,2,9,8,7,6,1,4],[1,8,6,3,4,5,9,7,2],[9,4,7,1,6,2,5,8,3]]),(15,[[6,9,7,1,2,8,3,4,5],[4,2,8,6,3,5,1,9,7],[3,1,5,4,7,9,6,8,2],[5,3,1,2,4,6,9,7,8],[2,8,6,3,9,7,4,5,1],[9,7,4,5,8,1,2,6,3],[1,4,9,8,5,2,7,3,6],[7,5,2,9,6,3,8,1,4],[8,6,3,7,1,4,5,2,9]]),(16,[[3,6,1,7,2,5,9,4,8],[5,8,7,9,6,4,2,1,3],[4,9,2,8,3,1,6,5,7],[6,3,8,2,5,9,4,7,1],[1,7,4,6,8,3,5,9,2],[2,5,9,1,4,7,8,3,6],[7,4,6,3,9,2,1,8,5],[9,2,3,5,1,8,7,6,4],[8,1,5,4,7,6,3,2,9]]),(17,[[3,5,9,8,6,7,1,2,4],[6,4,8,3,1,2,5,9,7],[7,1,2,5,4,9,8,3,6],[8,7,6,9,2,4,3,5,1],[5,2,4,7,3,1,9,6,8],[1,9,3,6,8,5,4,7,2],[9,3,1,4,7,6,2,8,5],[4,6,5,2,9,8,7,1,3],[2,8,7,1,5,3,6,4,9]]),(18,[[7,8,6,9,4,5,3,1,2],[2,1,9,8,6,3,4,5,7],[5,3,4,2,7,1,8,6,9],[1,6,5,4,8,2,9,7,3],[3,2,7,6,1,9,5,4,8],[4,9,8,5,3,7,1,2,6],[9,5,1,7,2,8,6,3,4],[8,4,2,3,5,6,7,9,1],[6,7,3,1,9,4,2,8,5]]),(19,[[7,4,3,5,1,2,9,8,6],[5,8,9,3,4,6,2,1,7],[1,2,6,9,8,7,3,4,5],[9,3,4,2,5,1,7,6,8],[6,7,1,4,9,8,5,3,2],[8,5,2,7,6,3,4,9,1],[3,9,8,6,7,5,1,2,4],[4,1,7,8,2,9,6,5,3],[2,6,5,1,3,4,8,7,9]]),(20,[[7,8,2,6,1,4,3,5,9],[4,3,9,8,2,5,1,7,6],[6,5,1,9,3,7,4,2,8],[2,9,3,4,7,1,8,6,5],[5,6,8,3,9,2,7,1,4],[1,4,7,5,6,8,2,9,3],[3,2,6,7,4,9,5,8,1],[9,7,5,1,8,3,6,4,2],[8,1,4,2,5,6,9,3,7]]),(21,[[4,2,8,5,3,1,7,9,6],[3,6,5,9,4,7,1,8,2],[9,7,1,2,6,8,4,3,5],[2,1,4,8,9,6,5,7,3],[6,9,7,4,5,3,2,1,8],[5,8,3,1,7,2,9,6,4],[8,4,9,6,1,5,3,2,7],[7,5,2,3,8,9,6,4,1],[1,3,6,7,2,4,8,5,9]]),(22,[[4,2,5,7,8,1,9,3,6],[1,7,8,3,6,9,5,2,4],[3,6,9,5,2,4,1,8,7],[8,9,4,1,5,7,3,6,2],[6,5,2,8,4,3,7,9,1],[7,1,3,6,9,2,8,4,5],[9,8,7,2,1,6,4,5,3],[5,3,6,4,7,8,2,1,9],[2,4,1,9,3,5,6,7,8]]),(23,[[3,4,8,2,6,7,9,5,1],[5,7,1,9,4,3,6,2,8],[2,6,9,1,8,5,3,7,4],[6,9,7,3,5,1,4,8,2],[1,2,3,8,7,4,5,9,6],[8,5,4,6,2,9,1,3,7],[4,1,5,7,9,8,2,6,3],[9,8,2,4,3,6,7,1,5],[7,3,6,5,1,2,8,4,9]]),(24,[[1,2,4,9,8,6,7,3,5],[8,6,7,4,3,5,9,1,2],[3,9,5,7,1,2,6,8,4],[4,7,8,3,5,9,2,6,1],[2,5,9,8,6,1,3,4,7],[6,3,1,2,7,4,5,9,8],[7,1,2,6,9,8,4,5,3],[9,8,3,5,4,7,1,2,6],[5,4,6,1,2,3,8,7,9]]),(25,[[3,6,1,5,2,4,7,8,9],[7,8,9,3,6,1,4,2,5],[5,2,4,8,7,9,3,6,1],[8,9,3,1,5,7,6,4,2],[4,1,2,6,8,3,5,9,7],[6,5,7,9,4,2,1,3,8],[1,4,8,7,9,6,2,5,3],[2,3,5,4,1,8,9,7,6],[9,7,6,2,3,5,8,1,4]]),(26,[[5,8,1,4,7,9,2,6,3],[3,2,9,1,5,6,8,4,7],[6,4,7,3,2,8,1,5,9],[9,5,6,7,3,1,4,2,8],[2,3,8,9,6,4,5,7,1],[7,1,4,5,8,2,9,3,6],[1,7,2,6,9,5,3,8,4],[8,9,3,2,4,7,6,1,5],[4,6,5,8,1,3,7,9,2]]),(27,[[3,8,7,2,5,6,4,1,9],[4,6,9,7,8,1,3,2,5],[5,1,2,4,3,9,8,6,7],[1,2,3,5,4,8,9,7,6],[7,5,8,9,6,3,2,4,1],[6,9,4,1,2,7,5,8,3],[8,3,5,6,7,4,1,9,2],[2,7,1,8,9,5,6,3,4],[9,4,6,3,1,2,7,5,8]]),(28,[[3,4,5,8,7,1,2,6,9],[2,7,9,6,5,3,1,8,4],[8,6,1,4,2,9,5,3,7],[1,9,7,3,4,6,8,5,2],[4,5,2,7,1,8,3,9,6],[6,8,3,5,9,2,7,4,1],[7,3,8,2,6,4,9,1,5],[5,1,6,9,3,7,4,2,8],[9,2,4,1,8,5,6,7,3]]),(29,[[2,3,5,7,6,1,4,8,9],[4,1,9,3,2,8,5,7,6],[8,6,7,5,4,9,2,1,3],[7,4,6,1,3,5,9,2,8],[5,2,1,8,9,6,7,3,4],[9,8,3,4,7,2,6,5,1],[3,9,4,2,8,7,1,6,5],[6,5,2,9,1,3,8,4,7],[1,7,8,6,5,4,3,9,2]]),(30,[[2,9,8,1,7,5,6,4,3],[6,5,7,3,9,4,1,2,8],[1,3,4,2,8,6,5,7,9],[8,2,1,6,4,9,7,3,5],[5,7,3,8,2,1,4,9,6],[4,6,9,7,5,3,2,8,1],[3,1,2,4,6,8,9,5,7],[7,8,5,9,1,2,3,6,4],[9,4,6,5,3,7,8,1,2]]),(31,[[7,6,1,5,4,3,2,8,9],[8,3,2,7,9,1,6,4,5],[5,4,9,6,2,8,1,3,7],[3,7,4,2,1,5,9,6,8],[1,2,8,9,3,6,5,7,4],[6,9,5,4,8,7,3,2,1],[4,1,7,3,6,9,8,5,2],[9,5,3,8,7,2,4,1,6],[2,8,6,1,5,4,7,9,3]]),(32,[[1,3,2,6,4,9,7,8,5],[7,5,8,2,1,3,6,4,9],[9,6,4,7,8,5,1,2,3],[5,4,3,8,9,7,2,1,6],[2,7,6,5,3,1,8,9,4],[8,9,1,4,2,6,5,3,7],[6,1,9,3,7,8,4,5,2],[3,2,7,1,5,4,9,6,8],[4,8,5,9,6,2,3,7,1]]),(33,[[6,9,8,1,7,3,5,4,2],[3,5,4,6,2,8,1,7,9],[1,7,2,5,4,9,3,6,8],[5,3,1,8,9,7,4,2,6],[9,4,6,3,1,2,8,5,7],[8,2,7,4,5,6,9,1,3],[7,6,5,9,3,1,2,8,4],[2,1,3,7,8,4,6,9,5],[4,8,9,2,6,5,7,3,1]]),(34,[[8,5,2,7,1,6,9,4,3],[1,9,7,8,4,3,6,5,2],[4,6,3,9,2,5,1,8,7],[2,7,8,6,3,4,5,9,1],[6,4,5,1,7,9,3,2,8],[9,3,1,5,8,2,4,7,6],[7,8,6,4,9,1,2,3,5],[3,1,4,2,5,8,7,6,9],[5,2,9,3,6,7,8,1,4]]),(35,[[4,5,3,2,1,8,7,9,6],[6,2,9,7,5,3,4,8,1],[1,7,8,4,9,6,5,3,2],[7,9,6,5,8,2,3,1,4],[3,1,4,9,6,7,8,2,5],[2,8,5,1,3,4,6,7,9],[5,4,2,8,7,9,1,6,3],[9,3,7,6,4,1,2,5,8],[8,6,1,3,2,5,9,4,7]]),(36,[[5,1,6,2,8,9,3,4,7],[8,4,9,1,7,3,2,5,6],[7,3,2,4,6,5,9,1,8],[6,9,8,3,1,7,5,2,4],[3,2,7,9,5,4,8,6,1],[1,5,4,8,2,6,7,3,9],[9,6,1,7,3,2,4,8,5],[2,7,5,6,4,8,1,9,3],[4,8,3,5,9,1,6,7,2]]),(37,[[9,4,5,6,8,1,7,2,3],[7,8,1,2,3,4,9,6,5],[3,2,6,7,5,9,1,8,4],[2,6,9,1,7,5,3,4,8],[1,3,8,9,4,2,5,7,6],[5,7,4,8,6,3,2,1,9],[4,5,7,3,2,6,8,9,1],[6,1,2,5,9,8,4,3,7],[8,9,3,4,1,7,6,5,2]]),(38,[[3,6,5,9,4,2,8,7,1],[1,2,8,7,5,6,4,9,3],[9,7,4,8,1,3,5,6,2],[8,1,9,4,3,5,6,2,7],[5,3,7,2,6,8,1,4,9],[6,4,2,1,7,9,3,5,8],[2,9,6,3,8,4,7,1,5],[7,5,3,6,9,1,2,8,4],[4,8,1,5,2,7,9,3,6]]),(39,[[1,3,4,5,8,7,2,9,6],[2,7,8,1,6,9,3,5,4],[6,9,5,2,3,4,8,1,7],[3,5,9,8,1,6,4,7,2],[8,2,1,4,7,3,5,6,9],[7,4,6,9,2,5,1,8,3],[9,1,7,3,4,8,6,2,5],[4,6,2,7,5,1,9,3,8],[5,8,3,6,9,2,7,4,1]]),(40,[[1,9,3,6,7,2,4,8,5],[4,6,2,3,5,8,9,7,1],[7,8,5,9,1,4,6,2,3],[5,3,8,2,9,6,7,1,4],[6,7,4,1,3,5,2,9,8],[2,1,9,4,8,7,3,5,6],[8,2,6,7,4,1,5,3,9],[9,4,1,5,2,3,8,6,7],[3,5,7,8,6,9,1,4,2]]),(41,[[8,1,4,9,7,6,5,3,2],[6,5,9,1,2,3,4,7,8],[7,3,2,8,5,4,1,6,9],[9,4,8,2,6,5,3,1,7],[2,7,5,3,4,1,8,9,6],[1,6,3,7,9,8,2,4,5],[3,9,1,6,8,2,7,5,4],[5,8,7,4,3,9,6,2,1],[4,2,6,5,1,7,9,8,3]]),(42,[[3,8,4,5,6,7,9,2,1],[1,2,6,4,3,9,7,8,5],[7,5,9,8,2,1,3,4,6],[5,6,3,7,9,8,2,1,4],[8,4,7,3,1,2,6,5,9],[9,1,2,6,4,5,8,7,3],[2,3,1,9,7,4,5,6,8],[4,9,5,2,8,6,1,3,7],[6,7,8,1,5,3,4,9,2]]),(43,[[4,6,9,1,5,8,3,7,2],[7,1,2,4,6,3,8,5,9],[5,3,8,2,9,7,6,4,1],[9,2,7,6,3,4,5,1,8],[3,8,5,7,1,9,4,2,6],[1,4,6,5,8,2,7,9,3],[6,5,3,9,4,1,2,8,7],[2,9,4,8,7,6,1,3,5],[8,7,1,3,2,5,9,6,4]]),(44,[[3,1,6,5,4,9,2,7,8],[9,8,7,3,2,1,6,4,5],[4,5,2,6,7,8,9,3,1],[5,9,4,2,3,6,8,1,7],[2,3,8,4,1,7,5,6,9],[6,7,1,9,8,5,3,2,4],[8,4,5,1,6,2,7,9,3],[1,2,9,7,5,3,4,8,6],[7,6,3,8,9,4,1,5,2]]),(45,[[5,8,6,1,2,7,9,4,3],[7,2,3,4,6,9,8,5,1],[4,9,1,8,5,3,2,6,7],[1,3,5,9,7,4,6,2,8],[2,7,9,6,1,8,5,3,4],[6,4,8,5,3,2,1,7,9],[9,1,7,2,4,6,3,8,5],[3,5,2,7,8,1,4,9,6],[8,6,4,3,9,5,7,1,2]]),(46,[[9,5,4,2,1,3,6,8,7],[6,1,7,5,4,8,9,2,3],[8,3,2,7,9,6,5,4,1],[7,6,3,8,5,1,2,9,4],[1,2,8,9,7,4,3,6,5],[5,4,9,3,6,2,1,7,8],[2,8,1,6,3,7,4,5,9],[4,7,5,1,2,9,8,3,6],[3,9,6,4,8,5,7,1,2]]),(47,[[1,5,9,7,4,3,8,6,2],[2,7,6,5,8,9,4,3,1],[3,4,8,6,1,2,7,5,9],[6,2,4,9,7,8,3,1,5],[9,1,7,2,3,5,6,8,4],[5,8,3,1,6,4,2,9,7],[4,3,5,8,2,1,9,7,6],[8,6,1,4,9,7,5,2,3],[7,9,2,3,5,6,1,4,8]]),(48,[[8,6,1,3,5,7,2,9,4],[5,9,7,4,8,2,3,6,1],[4,3,2,6,1,9,7,8,5],[9,1,6,2,7,5,8,4,3],[3,5,8,9,6,4,1,2,7],[2,7,4,1,3,8,9,5,6],[7,8,9,5,4,1,6,3,2],[1,4,3,8,2,6,5,7,9],[6,2,5,7,9,3,4,1,8]]),(49,[[2,9,4,8,6,3,5,1,7],[7,1,5,4,2,9,6,3,8],[8,6,3,7,5,1,4,9,2],[1,5,2,9,4,7,8,6,3],[4,7,9,3,8,6,2,5,1],[6,3,8,5,1,2,9,7,4],[9,8,6,1,3,4,7,2,5],[5,2,1,6,7,8,3,4,9],[3,4,7,2,9,5,1,8,6]]),(50,[[3,5,1,2,8,6,4,9,7],[4,9,2,1,5,7,6,3,8],[7,8,6,9,3,4,5,1,2],[2,7,5,4,6,9,1,8,3],[9,3,8,5,2,1,7,6,4],[6,1,4,8,7,3,2,5,9],[8,2,9,6,4,5,3,7,1],[1,6,3,7,9,2,8,4,5],[5,4,7,3,1,8,9,2,6]])]
  ]

testC0 = do
  a <- mkDV [1,2,5]
  constraint1 (==2) a
  return a

testC1 = do
  a <- mkDV [1,2,5]
  b <- mkDV [10,4,7]
  constraint2 (>) a b
  return (a,b)

testC2 = do
  a <- mkDV ["1","2","5"]
  b <- mkDV [3,2,7]
  constraint2 (\a b -> read a == b) a b
  return (a,b)

-- Project Euler problem 96

mapAllPairsM_ :: Monad m => (a -> a -> m b) -> [a] -> m ()
mapAllPairsM_ f []     = return ()
mapAllPairsM_ f (_:[]) = return ()
mapAllPairsM_ f (a:l) = mapM_ (f a) l >> mapAllPairsM_ f l

solveSudoku :: (Enum a, Eq a, Num a) => [[a]] -> [[a]]
solveSudoku puzzle = oneCSPSolution $ do
  dvs <- mapM (mapM (\a -> mkDV $ if a == 0 then [1 .. 9] else [a])) puzzle
  mapM_ assertRowConstraints dvs
  mapM_ assertRowConstraints $ transpose dvs
  sequence_ [assertSquareConstraints dvs x y | x <- [0,3,6], y <- [0,3,6]]
  return dvs
      where assertRowConstraints =  mapAllPairsM_ (constraint2 (/=))
            assertSquareConstraints dvs i j = 
                mapAllPairsM_ (constraint2 (/=)) [(dvs !! x) !! y | x <- [i..i+2], y <- [j..j+2]]

sudoku1 = [[0,0,3,0,2,0,6,0,0],[9,0,0,3,0,5,0,0,1],[0,0,1,8,0,6,4,0,0],[0,0,8,1,0,2,9,0,0],[7,0,0,0,0,0,0,0,8],[0,0,6,7,0,8,2,0,0],[0,0,2,6,0,9,5,0,0],[8,0,0,2,0,3,0,0,9],[0,0,5,0,1,0,3,0,0]]

sudoku3 = [[0,0,0,0,0,0,9,0,7],[0,0,0,4,2,0,1,8,0],[0,0,0,7,0,5,0,2,6],[1,0,0,9,0,4,0,0,0],[0,5,0,0,0,0,0,4,0],[0,0,0,5,0,7,0,0,9],[9,2,0,1,0,8,0,0,0],[0,3,4,0,5,9,0,0,0],[5,0,7,0,0,0,0,0,0]]

p96 :: [(Int, [[Int]])]
p96 = let f = unsafePerformIO $ readFile "sudoku.txt"
      in map (\(g:gs) -> (read $ drop 5 g, solveSudoku $ map (\g -> map (read . (:[])) g) gs))
             $ groupBy (\a b -> not $ isPrefixOf "Grid" b) $ lines f
